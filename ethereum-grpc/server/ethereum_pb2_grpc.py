# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ethereum_pb2 as ethereum__pb2


class ProtoEthServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetAccounts = channel.unary_stream(
        '/protoeth.ProtoEthService/GetAccounts',
        request_serializer=ethereum__pb2.GetAccountsRequest.SerializeToString,
        response_deserializer=ethereum__pb2.GetAccountsResponse.FromString,
        )
    self.SendRawTransactions = channel.unary_stream(
        '/protoeth.ProtoEthService/SendRawTransactions',
        request_serializer=ethereum__pb2.RawTxRequest.SerializeToString,
        response_deserializer=ethereum__pb2.TxResponse.FromString,
        )


class ProtoEthServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetAccounts(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendRawTransactions(self, request, context):
    """eth_sendRawTransaction should have simple requests but stream of responses
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProtoEthServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAccounts': grpc.unary_stream_rpc_method_handler(
          servicer.GetAccounts,
          request_deserializer=ethereum__pb2.GetAccountsRequest.FromString,
          response_serializer=ethereum__pb2.GetAccountsResponse.SerializeToString,
      ),
      'SendRawTransactions': grpc.unary_stream_rpc_method_handler(
          servicer.SendRawTransactions,
          request_deserializer=ethereum__pb2.RawTxRequest.FromString,
          response_serializer=ethereum__pb2.TxResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protoeth.ProtoEthService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
