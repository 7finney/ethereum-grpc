syntax = "proto3";

package protoeth;
option go_package = "protoeth";
import "google/protobuf/empty.proto";

// import "google/protobuf/empty.proto";

// GetAccounts
message GetAccountsReq {}

message TestnetReq {
    uint32 id = 1;
}

message HashStringOrNumber {
    string reqString = 1;
    uint64 reqNum = 2;
}

message InfoWithIndex {
    HashStringOrNumber req = 1;
    uint64 index = 2;
}

message CountResp {
    uint64 count = 1;
}

message ObjResp {
    string respObj = 1;
}

message GetAccountsResp {
    repeated string accounts = 1;
}

// GetBalance -> Eth.getBalance -> eth_getBalance
message GetBalanceReq {
    string address = 1;
}
message GetBalanceResp {
    string balance = 1;
}

message CreateRawTransactionReq {
    string to = 1;
    string data = 2;
    uint32 gas = 3;
    uint32 value = 4;   
}

message CreateRawTransactionResp {
    string rawTX = 1;
}

message DeploySignedTransactionReq{
    string signedTX = 1;
}

message DeploySignedTransactionResp {
    string txReciept = 1;
}

// GetTransaction -> Eth.getTransaction -> eth_getTransactionByHAsh
message TxHash {
    string txhash = 1;
}
message TransactionInfo {
    string transaction = 1;
}

message TxReceipt {
    string txReceipt = 1;
}

message RawTxRequest {
    string tx = 1;
}

message BlockNumber {
    uint64 blocknum = 1;
}

message TxResponse {
    string txData = 1;
}

message NumResult {
    uint64 resultNum = 1;
}

message GetTxReq {
    uint32 networkid = 1;
    string txhash = 2;
}

service ProtoEthService {
    rpc GetAccounts(GetAccountsReq) returns (GetAccountsResp) {};
    rpc GetBalance(GetBalanceReq) returns (GetBalanceResp) {};
    rpc GetTransaction(GetTxReq) returns (TransactionInfo) {};
    // eth_sendRawTransaction should have simple requests but stream of responses
    rpc SendRawTransactions(RawTxRequest) returns (stream TxResponse) {};
    rpc GetTransactionReceipt(TxHash) returns (TxReceipt) {};
    // rpc GetProtocolVersion() returns () {};
    // rpc GetCoinbase() returns () {};
    rpc GetHashrate(google.protobuf.Empty) returns (NumResult) {};
    rpc GetGasPrice(google.protobuf.Empty) returns (NumResult) {};
    rpc GetBlockNumber(google.protobuf.Empty) returns (BlockNumber) {};
    // rpc GetStorageAt() returns () {};
    rpc GetBlockTransactionCount(HashStringOrNumber) returns (CountResp) {};
    // rpc GetCode() returns () {};
    rpc GetBlock(HashStringOrNumber) returns (ObjResp) {};
    rpc GetTransactionFromBlock(InfoWithIndex) returns (ObjResp) {};
    rpc SetTestnet(TestnetReq) returns (google.protobuf.Empty) {};
}

// ##############################
// ## 1. create protocol buffer for sendTransaction
// ## this protobuf should return a stream. Once the transaction is successful, stream will return confirmations
// ## 2. split functions in multiple subs exmp - eth, personal, debug
// ##############################