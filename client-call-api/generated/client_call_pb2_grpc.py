# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import client_call_pb2 as client__call__pb2


class ClientCallServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RunDeploy = channel.unary_stream(
        '/eth_client_call.ClientCallService/RunDeploy',
        request_serializer=client__call__pb2.ClientCallRequest.SerializeToString,
        response_deserializer=client__call__pb2.ClientCallResponse.FromString,
        )


class ClientCallServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RunDeploy(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ClientCallServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RunDeploy': grpc.unary_stream_rpc_method_handler(
          servicer.RunDeploy,
          request_deserializer=client__call__pb2.ClientCallRequest.FromString,
          response_serializer=client__call__pb2.ClientCallResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'eth_client_call.ClientCallService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
